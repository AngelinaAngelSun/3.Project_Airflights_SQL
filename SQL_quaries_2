
ddddd










PROJECT: AIRFLIGHTS (SQL)

ЦЕЛЬ ПРОЕКТА: Используя различные SQL-запросы и средства аналитики, доступные в Python, проанализировать данные авиакомпании и оптимизировать зимние авиарейсы.
План документа:
1) Ответы на ряд вопросов по авиарейсам из базы данных. Отработка навыков фильтрации, группировки, агрегации и написания подзапросов. 
2) Сложный SQL-запрос для составления комплексного датасета с информацией о рейсах из г.Анапы в зимнее время для дальнейшего анализа и оптимизации.


 

*** *** ***  ЗАДАНИЕ 4.1  *** *** ***
База данных содержит список аэропортов практически всех крупных городов России. В большинстве городов есть только один аэропорт. 
Какие города составляют исключение?

SELECT 
        a.city, 
        count(a.airport_name) as airports_count
FROM dst_project.airports a
GROUP BY a.city
HAVING count(a.airport_name) !=1  
ORDER BY 2 desc

---> Ответ: Moscow, Ulyanovsk  - Верно 



*** *** ***  ЗАДАНИЕ 4.2  *** *** ***
ВОПРОС 4.2.1. Таблица рейсов содержит всю информацию о прошлых, текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице?

SELECT count(distinct f.status)
FROM   dst_project.flights f

---> Ответ: 6  - Верно


ВОПРОС 4.2.2. Какое количество самолетов находятся в воздухе на момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).

SELECT count(distinct flight_id) 
FROM   dst_project.flights f
WHERE  f.status = 'Departed'

---> Ответ: 58  - Верно


ВОПРОС 4.2.3. Места определяют схему салона каждой модели. Сколько мест имеет самолет модели 773(Boeing 777-300)?

SELECT  count(distinct seat_no) 
FROM    dst_project.aircrafts a
        join dst_project.seats s on a.aircraft_code = s.aircraft_code
WHERE   a.model = 'Boeing 777-300'

---> Ответ: 402  - Верно


ВОПРОС 4.2.4. Сколько состоявшихся (фактических) рейсов было совершено между 1 апреля 2017 года и 1 сентября 2017 года?

SELECT count(distinct f.flight_id) 
FROM   dst_project.flights f
WHERE  (f.actual_arrival between '04.01.2017' and  '09.01.2017') and (f.status = 'Arrived')  

---> Ответ: 74,227  - Верно



*** *** ***  ЗАДАНИЕ 4.3  *** *** ***
ВОПРОС 4.3.1. Сколько всего рейсов было отменено по данным базы?

SELECT   count(flight_id)
FROM     dst_project.flights f
WHERE    f.status = 'Cancelled'

---> Ответ: 437  - Верно


ВОПРОС 4.3.2. Сколько самолетов моделей типа Boeing, Sukhoi Superjet, Airbus находится в базе авиаперевозок?
1)
SELECT   count(*) as aircrafts_count
FROM     dst_project.aircrafts f
WHERE    f.model like 'Boeing%' 

2)
SELECT   count(*) as aircrafts_count
FROM     dst_project.aircrafts f
WHERE    f.model like 'Sukhoi Superjet%' 

3)
SELECT   count(*) as aircrafts_count
FROM     dst_project.aircrafts f
WHERE    f.model like 'Airbus%' 

---> Ответы: Boeing - 3,  Airbus - 3,  Sukhoi Superjet - 1.  - Верно


ВОПРОС 4.3.3. В каких из перечисленных частях света находится больше аэропортов?

WITH airports_count as 
            (
            SELECT  'Europe' as region,
                      count(distinct a.airport_code) as airports_cnt
            FROM dst_project.airports a
            WHERE a.timezone like 'Europe%'
            UNION 
            SELECT 'Australia',
                    count(distinct a.airport_code)
            FROM dst_project.airports a
            WHERE a.timezone like 'Australia%'
            UNION
            SELECT 'Asia',
                    count(distinct a.airport_code)
            FROM dst_project.airports a
            WHERE a.timezone like 'Asia%'
           )
SELECT  cnt.region,
        airports_cnt
FROM airports_count as cnt

---> Ответ: Europe, Asia  - Верно


ВОПРОС 4.3.4. У какого рейса была самая большая задержка прибытия за все время сбора данных? Введите id рейса (flight_id).

SELECT   flight_id
FROM     dst_project.flights f
WHERE    f.status = 'Arrived'
order by f.actual_arrival - f.scheduled_arrival desc
limit 1

---> Ответ: 157571  - Верно



*** *** ***  ЗАДАНИЕ 4.4  *** *** ***
ВОПРОС 4.4.1. Когда был запланирован самый первый вылет, сохраненный в базе данных?

SELECT f.scheduled_departure
FROM dst_project.flights f 
WHERE f.scheduled_departure is not null  
ORDER BY 1 LIMIT 1


SELECT min(f.scheduled_departure) as min_departure
FROM dst_project.flights f  

---> Ответ: 14.08.2016  - Верно


ВОПРОС 4.4.2. Сколько минут составляет запланированное время полета в самом длительном рейсе?

SELECT  f.flight_id,
        date_part('minute', f.scheduled_arrival - f.scheduled_departure) + 60*date_part('hour', f.scheduled_arrival - f.scheduled_departure) as time_difference
FROM dst_project.flights f  
ORDER BY 2 desc LIMIT 1

---> Ответ: 530  - Верно


ВОПРОС 4.4.3. Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT 
        f.departure_airport,
        f.arrival_airport,
        f.scheduled_arrival - f.scheduled_departure as diff
FROM dst_project.flights f 
WHERE f.scheduled_arrival is not null and f.scheduled_departure is not null
ORDER BY 3 desc LIMIT 1

---> Ответ: DME - UUS  - Верно


ВОПРОС 4.4.4. Сколько составляет средняя дальность полета среди всех самолетов в минутах? Секунды округляются в меньшую сторону (отбрасываются до минут).

SELECT 
        round(avg(date_part('minute', f.scheduled_arrival - f.scheduled_departure) + 60 * date_part('hour', f.scheduled_arrival - f.scheduled_departure)))
FROM dst_project.flights f 
WHERE f.actual_arrival is not null and f.actual_departure is not null

---> Ответ: 128  - Верно



*** *** ***  ЗАДАНИЕ 4.5  *** *** ***
ВОПРОС 4.5.1. Мест какого класса у SU9 больше всего?

SELECT s.fare_conditions,
       count(s.aircraft_code) as aircraft_cnt
FROM dst_project.aircrafts a 
     JOIN dst_project.seats s on a.aircraft_code = s.aircraft_code
WHERE a.aircraft_code = 'SU9'
GROUP BY 1  
ORDER BY 2 desc
LIMIT 1

---> Ответ: Economy  - Верно


ВОПРОС 4.5.2. Какую самую минимальную стоимость составило бронирование за всю историю?

SELECT 
        a.book_ref,
        min(a.total_amount) as min_cost
FROM dst_project.bookings a 
GROUP BY 1  
ORDER BY 2 asc
LIMIT 1

---> Ответ: 3400  - Верно


ВОПРОС 4.5.3. Какой номер места был у пассажира с id = 4313 788533?

SELECT 
        b.seat_no
FROM dst_project.boarding_passes b 
     JOIN dst_project.tickets t on b.ticket_no =  t.ticket_no
WHERE t.passenger_id = '4313 788533'

---> Ответ: 2A  - Верно



*** *** ***  ЗАДАНИЕ 5.1  *** *** ***
ВОПРОС 5.1.1. Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?

SELECT 
        a.city, 
		count(distinct f.flight_id) as flights_count
FROM dst_project.airports a 
    JOIN dst_project.flights f on f.arrival_airport = a.airport_code
WHERE a.city = 'Anapa' and date_part('year', f.actual_arrival) = 2017
GROUP BY 1

---> Ответ: 486 - Верно


ВОПРОС 5.1.2. Сколько рейсов из Анапы вылетело зимой 2017 года?

SELECT 
        a.city, 
		count(distinct f.flight_id) flights_count
FROM dst_project.airports a 
    JOIN dst_project.flights f on f.arrival_airport = a.airport_code
WHERE a.city = 'Anapa' and date_part('year', f.actual_arrival) = 2017 and date_part('month', f.actual_arrival) in (1,2,12)
GROUP BY 1

---> Ответ: 127 - Верно


ВОПРОС 5.1.3. Посчитайте количество отмененных рейсов из Анапы за все время.

SELECT 
        f.departure_airport, 
        count(distinct f.flight_id) as flights_count
FROM dst_project.flights f 
WHERE f.departure_airport = 'AAQ' and f.status = 'Cancelled'
GROUP BY 1


---> Ответ: 1 - Верно
 
 
ВОПРОС 5.1.4. Сколько рейсов из Анапы не летают в Москву?

SELECT 
        f.departure_airport, 
        count(distinct f.flight_id) as flights_count
FROM dst_project.flights f 
WHERE f.departure_airport = 'AAQ' and f.arrival_airport not in ('DME', 'SVO', 'VKO') 
GROUP BY 1


ДРУГОЙ ВАРИАНТ РЕШЕНИЯ:
SELECT 
        f.departure_airport, 
        count(distinct f.flight_id) as flights_count
FROM dst_project.flights f
     JOIN dst_project.airports a on f.arrival_airport = a.airport_code
WHERE f.departure_airport = 'AAQ' and a.city !=  'Moscow'
GROUP BY 1

---> Ответ: 453 - Верно


ВОПРОС 5.1.5. Какая из предложенных моделей самолета летящего на рейсах из Анапы имеет больше всего мест?

SELECT 
        a.model,
        count(b.seat_no) as seats_count
FROM dst_project.flights f
     JOIN dst_project.aircrafts a on f.aircraft_code = a.aircraft_code
     JOIN dst_project.boarding_passes b on f.flight_id = b.flight_id
WHERE f.departure_airport = 'AAQ' 
GROUP BY 1
ORDER BY 2 desc
LIMIT 1


ДРУГОЙ ВАРИАНТ РЕШЕНИЯ:
WITH seats as
            (
            SELECT   
                    distinct s.aircraft_code,
                    count(*) as count_seats
            FROM     dst_project.seats s
            GROUP BY s.aircraft_code
            )
SELECT   
     a.model, s.count_seats
FROM
    dst_project.flights as f
    JOIN dst_project.aircrafts a on a.aircraft_code = f.aircraft_code
    JOIN seats s on s.aircraft_code =  f.aircraft_code
WHERE f.departure_airport = 'AAQ'
GROUP BY a.model, s.count_seats
ORDER BY s.count_seats desc LIMIT 1

---> Ответ: Boeing 737-300 - Верно




~~~ ~~~ ~~~ ~~~  ГЛАВНЫЕ ЗАДАНИЯ ПРОЕКТА:  ~~~ ~~~ ~~~ ~~~
1) При помощи SQL-запроса собрать в один датасет как можно больше агрегированной информации о рейсах из г.Анапы в зимнее время. 
---> SQL-запрос для составления датасета представлен этом в документе ниже. Созданный датасет расположен в репозитории. Файл - flights_df.csv

2) Провести аналитическую работу и выяснить, от каких самых малоприбыльных рейсов можно отказаться.
---> Ноутбук с анализом и оценкой прибыльности рейсов на основе составленного мною датасета представлен в репозитирории. Файл- AirFlights_Analysis(SQL).ipynb.
 
3) Подготовить презентацию на 5-6 слайдов для защиты своего решения. 
---> PowerPoint презентация с описанием структуры составленного датасета и выводами также представлена в репозитирории. Файл - AirFlights_Presentation.pptx. 




/*  SQL-запрос для составления комплексного датасета с информацией о рейсах из г.Анапы в зимнее время  */    
 

      -- Основные данные о рейстах: flight_id, flight_no, аэропорт отправления и прибытия и др. К этим данным затем присоединяется остальная информация
WITH flights_data AS    
                    (
                    select *
                    from dst_project.flights
                    where departure_airport = 'AAQ'
                            and (date_trunc('month', scheduled_departure) in ('2017-01-01','2017-02-01', '2016-12-01'))
                            and status not in ('Cancelled')
                    group by flight_id
                    ),
     -- Код аэропорта отправления и прибытия, географические координаты (широта, долгота) 
     airports_data AS 
                      (
                        select 
                                aa.airport_code,
                                aa.city as arrival_city,
                                aa.longitude as arrival_airport_longitude,
                                aa.latitude as arrival_airport_latitude
                        from dst_project.airports aa 
                      ),
     airports_data_2 AS
                      (
                        select 
                                f.flight_id,
                                -- aa_2.airport_code as departure_airport_code,
                                aa_2.city as departure_city,
                                aa_2.longitude as  departure_airport_longitude,
                                aa_2.latitude as departure_airport_latitude
                        from dst_project.airports as aa_2
                        join dst_project.flights f on f.departure_airport = aa_2.airport_code 
                        where aa_2.airport_code = 'AAQ'
                      ),
     -- Общее количество посадочных мест и кол-во мест класса эконом / бизнес
     seats_count AS 
                      (
                         select 
                                s.aircraft_code,
                                count(distinct s.seat_no) as all_seats_total_cnt,
                                count(case when fare_conditions = 'Economy' then s.seat_no end) as economy_seats_cnt,
                                count(case when fare_conditions = 'Business' then s.seat_no end) as business_seats_cnt
                        from dst_project.seats s
                        group by 1
                        order by 1 desc
                      ),
     -- Количество купленных билетов класса эконом / бизнес и их стоимость, а также общее кол-во купленных билетов и их суммарная стоимость 
     sold_seats_and_revenue_data AS (
                                    select
                                            ti.flight_id,
                                            count(ti.amount) sold_tickets_total_cnt,
                                            sum(ti.amount) as total_tickets_revenue,
                                            count(case when ti.fare_conditions = 'Economy' then ti.flight_id end) as sold_economy_tickets_cnt,
                                            count(case when ti.fare_conditions = 'Business' then ti.flight_id end) as sold_business_tickets_cnt,
                                            sum(case when ti.fare_conditions = 'Economy' then ti.amount end) as economy_tickets_revenue,
                                            sum(case when ti.fare_conditions = 'Business' then ti.amount end) as business_tickets_revenue
                                    from dst_project.ticket_flights ti
                                    group by ti.flight_id
                                     ),
     -- Модель и код самолета
     aircraft_data AS   
                      (
                        select 
                                a.aircraft_code,
                                a.model
                        from dst_project.aircrafts a 
                       ),
                                     
      -- Расход топлива в мин. для самолётов SU9 и Boeing-737
      fuel_consumption_data AS  
                              (
                              select 
                                    1700.0/60 as fuel_consumption_per_minute,
                                    'SU9' as aircraft_code
                              union
                              select 
                                    2400.0/60,
                                    '733'
                              ),
      -- Стоимость кг топлива в разные месяцы
      fuel_cost AS  
                    (
                    -- Стоимость кг топлива в январе 2017г
                    SELECT   
                            flight_id,
                            41435.0/1000 as fuel_cost
                    FROM
                            dst_project.flights as f
                            where f.departure_airport = 'AAQ' and (date_trunc('month', f.scheduled_departure) in ('2017-01-01')) and f.status not in ('Cancelled')
                    union all
                    -- Стоимость кг топлива в феврале 2017г
                    SELECT   
                            flight_id,
                            39553.0/1000 
                    FROM
                            dst_project.flights as f
                            where f.departure_airport = 'AAQ' and (date_trunc('month', f.scheduled_departure) in ('2017-02-01')) and f.status not in ('Cancelled')
                    union all
                    -- Стоимость кг топлива в декабре 2016г
                    SELECT   
                            flight_id,
                            38867.0/1000 
                    FROM
                            dst_project.flights as f
                            where f.departure_airport = 'AAQ' and (date_trunc('month', f.scheduled_departure) in ('2016-12-01')) and f.status not in ('Cancelled')
                    )                          
                            
      
SELECT      
        distinct fl.flight_id,
        fl.flight_no,
        airp_2.departure_city,
        fl.departure_airport,
        airp.arrival_city,
        fl.arrival_airport,
        airp_2.departure_airport_longitude,
        airp_2.departure_airport_latitude,
        airp.arrival_airport_longitude,
        airp.arrival_airport_latitude,
        fl.status,
        fl.scheduled_departure,
        fl.scheduled_arrival,
        fl.actual_departure,
        fl.actual_arrival,
        -- to_char(fl.scheduled_arrival - fl.scheduled_departure, 'HH24:MI') as scheduled_flight_duration,    
        -- to_char(fl.actual_arrival - fl.actual_departure, 'HH24:MI') as actual_flight_duration,    
        date_part('minute', fl.scheduled_arrival - fl.scheduled_departure) + 60*date_part('hour', fl.scheduled_arrival - fl.scheduled_departure) as scheduled_flight_duration,  -- Запланированная длительность полета (в минутах)
        date_part('minute', fl.actual_arrival - fl.actual_departure) + 60*date_part('hour', fl.actual_arrival - fl.actual_departure) as actual_flight_duration, -- Фактическая длительность полета (в минутах)
        fl.aircraft_code,
        aicr.model as aircraft_model,
        c.fuel_consumption_per_minute,
        f.fuel_cost,
        s.all_seats_total_cnt,
        rev.sold_tickets_total_cnt,
        s.economy_seats_cnt,
        rev.sold_economy_tickets_cnt,
        s.business_seats_cnt,
        rev.sold_business_tickets_cnt,
        rev.total_tickets_revenue,
        rev.economy_tickets_revenue,
        rev.business_tickets_revenue 

FROM flights_data as fl

LEFT JOIN airports_data as airp ON fl.arrival_airport = airp.airport_code
LEFT JOIN airports_data_2 as airp_2 ON fl.flight_id = airp_2.flight_id
LEFT JOIN seats_count as s ON fl.aircraft_code = s.aircraft_code
LEFT JOIN sold_seats_and_revenue_data as rev ON fl.flight_id = rev.flight_id
LEFT JOIN aircraft_data as aicr ON fl.aircraft_code = aicr.aircraft_code
LEFT JOIN fuel_consumption_data as c on fl.aircraft_code = c.aircraft_code
LEFT JOIN fuel_cost as f on fl.flight_id = f.flight_id

ORDER BY 1,2

